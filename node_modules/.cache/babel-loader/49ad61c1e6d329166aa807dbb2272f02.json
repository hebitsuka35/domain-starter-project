{"ast":null,"code":"var _jsxFileName = \"/Users/SY/cool-domains/domain-starter-project/src/App.js\",\n    _s = $RefreshSig$();\n\n// App.js\nimport React, { useEffect, useState } from \"react\";\nimport \"./styles/App.css\";\nimport twitterLogo from \"./assets/twitter-logo.svg\";\nimport { ethers } from \"ethers\"; // コントラクト\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TWITTER_HANDLE = \"_UNCHAIN\";\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`; // 登録したいドメインです。好みで変えてみましょう。\n\nconst tld = \".ninja\";\nconst CONTRACT_ADDRESS = \"0x70302C59D938f0fb7F7Ff6523041c3186A5e89a5\";\n\nconst App = () => {\n  _s();\n\n  const [currentAccount, setCurrentAccount] = useState(\"\"); // state管理するプロパティを追加しています。\n\n  const [domain, setDomain] = useState(\"\");\n  const [record, setRecord] = useState(\"\");\n\n  const connectWallet = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (!ethereum) {\n        alert(\"Get MetaMask -> https://metamask.io/\");\n        return;\n      }\n\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const checkIfWalletIsConnected = async () => {\n    const {\n      ethereum\n    } = window;\n\n    if (!ethereum) {\n      console.log(\"Make sure you have metamask!\");\n      return;\n    } else {\n      console.log(\"We have the ethereum object\", ethereum);\n    }\n\n    const accounts = await ethereum.request({\n      method: \"eth_accounts\"\n    });\n\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log(\"Found an authorized account:\", account);\n      setCurrentAccount(account);\n    } else {\n      console.log(\"No authorized account found\");\n    }\n  }; // App.js\n\n\n  const mintDomain = async () => {\n    // ドメインがnullのときrunしません。\n    if (!domain) {\n      return;\n    } // ドメインが3文字に満たない、短すぎる場合にアラートを出します。\n\n\n    if (domain.length < 3) {\n      alert(\"Domain must be at least 3 characters long\");\n      return;\n    } // ドメインの文字数に応じて価格を計算します。\n    // 3 chars = 0.05 MATIC, 4 chars = 0.03 MATIC, 5 or more = 0.01 MATIC\n\n\n    const price = domain.length === 3 ? \"0.05\" : domain.length === 4 ? \"0.03\" : \"0.01\";\n    console.log(\"Minting domain\", domain, \"with price\", price);\n\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(CONTRACT_ADDRESS, contractAbi.abi, signer);\n        console.log(\"Going to pop wallet now to pay gas...\");\n        let tx = await contract.register(domain, {\n          value: ethers.utils.parseEther(price)\n        }); // ミントされるまでトランザクションを待ちます。\n\n        const receipt = await tx.wait(); // トランザクションが問題なく実行されたか確認します。\n\n        if (receipt.status === 1) {\n          console.log(\"Domain minted! https://mumbai.polygonscan.com/tx/\" + tx.hash); // domain,recordをセットします。\n\n          tx = await contract.setRecord(domain, record);\n          await tx.wait();\n          console.log(\"Record set! https://mumbai.polygonscan.com/tx/\" + tx.hash);\n          setRecord(\"\");\n          setDomain(\"\");\n        } else {\n          alert(\"Transaction failed! Please try again\");\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }; // レンダリング関数です。\n\n\n  const renderNotConnectedContainer = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"connect-wallet-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://media.giphy.com/media/3ohhwytHcusSCXXOUg/giphy.gif\",\n      alt: \"Ninja donut gif\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      className: \"cta-button connect-wallet-button\",\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this); // ドメインネームとデータの入力フォームです。\n\n\n  const renderInputForm = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"first-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: domain,\n          placeholder: \"domain\",\n          onChange: e => setDomain(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tld\",\n          children: [\" \", tld, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: record,\n        placeholder: \"whats ur ninja power\",\n        onChange: e => setRecord(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-button mint-button\",\n          disabled: null,\n          onClick: null,\n          children: \"Mint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-button mint-button\",\n          disabled: null,\n          onClick: null,\n          children: \"Set data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n  };\n\n  useEffect(() => {\n    checkIfWalletIsConnected();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: /*#__PURE__*/_jsxDEV(\"header\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"title\",\n              children: \"\\uD83D\\uDC31\\u200D\\uD83D\\uDC64 Ninja Name Service\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"subtitle\",\n              children: \"Your immortal API on the blockchain!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), !currentAccount && renderNotConnectedContainer(), currentAccount && renderInputForm(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Twitter Logo\",\n          className: \"twitter-logo\",\n          src: twitterLogo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"footer-text\",\n          href: TWITTER_LINK,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: `built with @${TWITTER_HANDLE}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"gnw9gOb14qiy/+I0Qvv12/uQdwk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","twitterLogo","ethers","TWITTER_HANDLE","TWITTER_LINK","tld","CONTRACT_ADDRESS","App","currentAccount","setCurrentAccount","domain","setDomain","record","setRecord","connectWallet","ethereum","window","alert","accounts","request","method","console","log","error","checkIfWalletIsConnected","length","account","mintDomain","price","provider","providers","Web3Provider","signer","getSigner","contract","Contract","contractAbi","abi","tx","register","value","utils","parseEther","receipt","wait","status","hash","renderNotConnectedContainer","renderInputForm","e","target"],"sources":["/Users/SY/cool-domains/domain-starter-project/src/App.js"],"sourcesContent":["// App.js\nimport React, { useEffect, useState } from \"react\";\nimport \"./styles/App.css\";\nimport twitterLogo from \"./assets/twitter-logo.svg\";\nimport { ethers } from \"ethers\";\n\n// コントラクト\nconst TWITTER_HANDLE = \"_UNCHAIN\";\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n// 登録したいドメインです。好みで変えてみましょう。\nconst tld = \".ninja\";\nconst CONTRACT_ADDRESS = \"0x70302C59D938f0fb7F7Ff6523041c3186A5e89a5\";\n\nconst App = () => {\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  // state管理するプロパティを追加しています。\n  const [domain, setDomain] = useState(\"\");\n  const [record, setRecord] = useState(\"\");\n\n  const connectWallet = async () => {\n    try {\n      const { ethereum } = window;\n\n      if (!ethereum) {\n        alert(\"Get MetaMask -> https://metamask.io/\");\n        return;\n      }\n\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const checkIfWalletIsConnected = async () => {\n    const { ethereum } = window;\n\n    if (!ethereum) {\n      console.log(\"Make sure you have metamask!\");\n      return;\n    } else {\n      console.log(\"We have the ethereum object\", ethereum);\n    }\n\n    const accounts = await ethereum.request({ method: \"eth_accounts\" });\n\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log(\"Found an authorized account:\", account);\n      setCurrentAccount(account);\n    } else {\n      console.log(\"No authorized account found\");\n    }\n  };\n\n  // App.js\n  const mintDomain = async () => {\n    // ドメインがnullのときrunしません。\n    if (!domain) {\n      return;\n    }\n    // ドメインが3文字に満たない、短すぎる場合にアラートを出します。\n    if (domain.length < 3) {\n      alert(\"Domain must be at least 3 characters long\");\n      return;\n    }\n    // ドメインの文字数に応じて価格を計算します。\n    // 3 chars = 0.05 MATIC, 4 chars = 0.03 MATIC, 5 or more = 0.01 MATIC\n    const price =\n      domain.length === 3 ? \"0.05\" : domain.length === 4 ? \"0.03\" : \"0.01\";\n    console.log(\"Minting domain\", domain, \"with price\", price);\n    try {\n      const { ethereum } = window;\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(\n          CONTRACT_ADDRESS,\n          contractAbi.abi,\n          signer\n        );\n\n        console.log(\"Going to pop wallet now to pay gas...\");\n        let tx = await contract.register(domain, {\n          value: ethers.utils.parseEther(price),\n        });\n        // ミントされるまでトランザクションを待ちます。\n        const receipt = await tx.wait();\n\n        // トランザクションが問題なく実行されたか確認します。\n        if (receipt.status === 1) {\n          console.log(\n            \"Domain minted! https://mumbai.polygonscan.com/tx/\" + tx.hash\n          );\n\n          // domain,recordをセットします。\n          tx = await contract.setRecord(domain, record);\n          await tx.wait();\n\n          console.log(\"Record set! https://mumbai.polygonscan.com/tx/\" + tx.hash);\n\n          setRecord(\"\");\n          setDomain(\"\");\n        } else {\n          alert(\"Transaction failed! Please try again\");\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // レンダリング関数です。\n  const renderNotConnectedContainer = () => (\n    <div className=\"connect-wallet-container\">\n      <img\n        src=\"https://media.giphy.com/media/3ohhwytHcusSCXXOUg/giphy.gif\"\n        alt=\"Ninja donut gif\"\n      />\n      {/* ボタンクリックでconnectWallet関数を呼び出します。 */}\n      <button\n        onClick={connectWallet}\n        className=\"cta-button connect-wallet-button\"\n      >\n        Connect Wallet\n      </button>\n    </div>\n  );\n\n  // ドメインネームとデータの入力フォームです。\n  const renderInputForm = () => {\n    return (\n      <div className=\"form-container\">\n        <div className=\"first-row\">\n          <input\n            type=\"text\"\n            value={domain}\n            placeholder=\"domain\"\n            onChange={(e) => setDomain(e.target.value)}\n          />\n          <p className=\"tld\"> {tld} </p>\n        </div>\n\n        <input\n          type=\"text\"\n          value={record}\n          placeholder=\"whats ur ninja power\"\n          onChange={(e) => setRecord(e.target.value)}\n        />\n\n        <div className=\"button-container\">\n          <button\n            className=\"cta-button mint-button\"\n            disabled={null}\n            onClick={null}\n          >\n            Mint\n          </button>\n          <button\n            className=\"cta-button mint-button\"\n            disabled={null}\n            onClick={null}\n          >\n            Set data\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    checkIfWalletIsConnected();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"header-container\">\n          <header>\n            <div className=\"left\">\n              <p className=\"title\">🐱‍👤 Ninja Name Service</p>\n              <p className=\"subtitle\">Your immortal API on the blockchain!</p>\n            </div>\n          </header>\n        </div>\n\n        {!currentAccount && renderNotConnectedContainer()}\n        {/* アカウントが接続されるとインプットフォームをレンダリングします。 */}\n        {currentAccount && renderInputForm()}\n\n        <div className=\"footer-container\">\n          <img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n          <a\n            className=\"footer-text\"\n            href={TWITTER_LINK}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >{`built with @${TWITTER_HANDLE}`}</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}